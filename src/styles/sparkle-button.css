/* Adapted from Uiverse.io by JkHuger */
.sparkle-button-wrapper {
  position: relative; /* Needed for particle pen positioning */
}

.sparkle-button {
  --primary-hue: 215; /* From globals.css --primary */
  --primary-saturation: 80%; /* Light mode */
  --primary-lightness-base: 55%; /* Light mode */
  --primary-lightness-hover: 65%; /* Dark mode */
  --primary-foreground-hue: 210;
  --primary-foreground-saturation: 20%;
  --primary-foreground-lightness: 98%;

  --active: 0;
  --transition: 0.3s;
  --spark: 1.8s;
  --cut: 0.1em; /* Adjusts the inner border thickness */

  --bg: radial-gradient(
      40% 50% at center 100%,
      hsla(var(--primary-hue), var(--primary-saturation), var(--primary-lightness-hover), var(--active)),
      transparent
    ),
    radial-gradient(
      80% 100% at center 120%,
      hsla(var(--primary-hue), var(--primary-saturation), var(--primary-lightness-hover), var(--active)),
      transparent
    ),
    hsl(var(--primary-hue), var(--primary-saturation), calc((var(--active) * (var(--primary-lightness-hover) - var(--primary-lightness-base))) + var(--primary-lightness-base))); /* Interpolate lightness */

  background: var(--bg);
  color: hsl(var(--primary-foreground-hue), var(--primary-foreground-saturation), var(--primary-foreground-lightness)); /* Use foreground color */
  font-size: 0.875rem; /* Match sm button size */
  font-weight: 600; /* Match sm button font-semibold */
  border: 0;
  cursor: pointer;
  /* Match sm button padding and height */
  padding: 0 1rem; /* Adjust padding for content */
  height: 2.25rem; /* h-9 */
  display: inline-flex; /* Use inline-flex */
  align-items: center;
  justify-content: center; /* Center content */
  gap: 0.35em; /* Adjusted gap */
  white-space: nowrap;
  border-radius: 0.375rem; /* rounded-md */
  position: relative;
  box-shadow: 0 0 calc(var(--active) * 1.5em) calc(var(--active) * 0.5em) hsla(var(--primary-hue), var(--primary-saturation), var(--primary-lightness-hover), 0.5), /* Adjusted shadow */
    0 0em 0 0 hsla(var(--primary-hue), var(--primary-saturation), calc((var(--active) * 10%) + 30%), 1) inset, /* Adjusted inner shadow */
    0 -0.05em 0 0 hsla(var(--primary-hue), var(--primary-saturation), calc(var(--active) * 20% + 40%), 1) inset; /* Adjusted inner shadow */
  transition: box-shadow var(--transition), scale var(--transition), background var(--transition);
  scale: calc(1 + (var(--active) * 0.05)); /* Reduced scale effect */
}

.sparkle-button:is(:hover, :focus-visible) {
  --active: 1;
}

.sparkle-button:active {
  scale: 1;
  transition: scale 0.1s; /* Faster active transition */
}

.sparkle-button .sparkle {
  width: 0.9em; /* Slightly smaller sparkle icon */
  height: 0.9em;
  margin-right: 0.1em; /* Space between icon and text */
  translate: 0% -5%; /* Fine-tune icon position */
}

.sparkle-button .sparkle path {
  color: hsl(var(--primary-foreground-hue), var(--primary-foreground-saturation), calc((var(--active, 0) * 50%) + var(--base, 50%))); /* Adjust sparkle color based on active state */
  transform-box: fill-box;
  transform-origin: center;
  fill: currentColor;
  stroke: currentColor;
  animation-delay: calc((var(--transition) * 1.5) + (var(--delay) * 0.1s)); /* Reduced delay */
  animation-duration: 0.6s;
  transition: color var(--transition);
}

.sparkle-button:is(:hover, :focus-visible) .sparkle path {
  animation-name: bounce;
}

@keyframes bounce {
  35%, 65% {
    scale: var(--scale);
  }
}

.sparkle-button .sparkle path:nth-of-type(1) {
  --scale: 0.5;
  --delay: 0.05; /* Slightly faster */
  --base: 70%;
}

.sparkle-button .sparkle path:nth-of-type(2) {
  --scale: 1.5;
  --delay: 0.1; /* Slightly faster */
  --base: 50%;
}

.sparkle-button .sparkle path:nth-of-type(3) {
  --scale: 2.5;
  --delay: 0.15; /* Slightly faster */
  --base: 60%;
}

/* Spark animation */
.sparkle-button .spark {
  position: absolute;
  inset: 0;
  border-radius: 0.375rem; /* rounded-md */
  rotate: 0deg;
  overflow: hidden;
  mask: linear-gradient(white, transparent 50%);
  animation: flip calc(var(--spark) * 2) infinite steps(2, end);
}

@keyframes flip {
  to {
    rotate: 360deg;
  }
}

.sparkle-button .spark:before {
  content: "";
  position: absolute;
  width: 200%;
  aspect-ratio: 1;
  top: 0%;
  left: 50%;
  z-index: -1;
  translate: -50% -15%;
  rotate: 0;
  transform: rotate(-90deg);
  opacity: calc((var(--active)) * 0.5 + 0.2); /* Adjusted opacity */
  background: conic-gradient(
    from 0deg,
    transparent 0 340deg,
    hsl(var(--primary-foreground-hue), var(--primary-foreground-saturation), var(--primary-foreground-lightness)) 360deg /* Use foreground color */
  );
  transition: opacity var(--transition);
  animation: rotate var(--spark) linear infinite both;
}

.sparkle-button .spark:after {
  content: "";
  position: absolute;
  inset: var(--cut);
  border-radius: 0.375rem; /* rounded-md */
}

/* Backdrop to show base color */
.sparkle-button .backdrop {
  position: absolute;
  inset: var(--cut);
  background: var(--bg);
  border-radius: 0.375rem; /* rounded-md */
  transition: background var(--transition);
  z-index: -1; /* Ensure it's behind text and icon */
}

@keyframes rotate {
  to {
    transform: rotate(90deg);
  }
}

/* Text styling */
.sparkle-button .text {
  translate: 0% 0%; /* Reset translate */
  letter-spacing: 0.01ch;
  background: linear-gradient(90deg,
    hsl(var(--primary-foreground-hue), var(--primary-foreground-saturation), calc((var(--active) * 20%) + 80%)), /* Lighter end */
    hsl(var(--primary-foreground-hue), var(--primary-foreground-saturation), calc((var(--active) * 40%) + 60%)) /* Darker start */
  );
  -webkit-background-clip: text;
  color: transparent;
  transition: background var(--transition);
  position: relative; /* Ensure text is above backdrop */
  z-index: 1;
}

/* Particle pen - keep for potential future use or remove if definitely not needed */
.particle-pen {
  position: absolute;
  width: 200%;
  aspect-ratio: 1;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  -webkit-mask: radial-gradient(white, transparent 65%);
  mask: radial-gradient(white, transparent 65%);
  z-index: -1;
  opacity: var(--active, 0);
  transition: opacity var(--transition);
  pointer-events: none; /* Don't interfere with clicks */
}

.particle {
  fill: hsl(var(--primary-foreground-hue), var(--primary-foreground-saturation), var(--primary-foreground-lightness)); /* Match foreground */
  width: calc(var(--size, 0.25) * 0.5rem); /* Smaller particles */
  aspect-ratio: 1;
  position: absolute;
  top: calc(var(--y) * 1%);
  left: calc(var(--x) * 1%);
  opacity: var(--alpha, 0); /* Start hidden */
  animation: float-out calc(var(--duration, 1) * 0.8s) calc(var(--delay) * -0.8s) infinite linear;
  transform-origin: var(--origin-x, 50%) var(--origin-y, 50%);
  z-index: -1;
  animation-play-state: var(--play-state, paused);
  transition: opacity 0.2s;
}

.sparkle-button:is(:hover, :focus-visible) ~ .particle-pen .particle {
  opacity: var(--alpha, 1); /* Show on hover */
  transition: opacity var(--transition) calc(var(--delay) * 0.1s);
}


.particle path {
  fill: currentColor; /* Inherit color from particle */
  stroke: none;
}

.particle:nth-of-type(even) {
  animation-direction: reverse;
}

@keyframes float-out {
  100% {
    translate: calc(var(--tx) * 1em) calc(var(--ty) * 1em); /* Adjust travel distance */
    rotate: 360deg;
    opacity: 0;
  }
}

/* Example particle definitions - reduced number and adjusted */
.particle:is(:nth-of-type(1)) { --x: 30; --y: 20; --alpha: 0.9; --tx: -0.5; --ty: 0.7; --delay: 0.1; --duration: 0.6; --size: 0.2;}
.particle:is(:nth-of-type(2)) { --x: 50; --y: 15; --alpha: 0.8; --tx: 0; --ty: -0.8; --delay: 0.2; --duration: 0.7; --size: 0.3;}
.particle:is(:nth-of-type(3)) { --x: 70; --y: 25; --alpha: 1; --tx: 0.5; --ty: 0.5; --delay: 0.3; --duration: 0.5; --size: 0.25;}
.particle:is(:nth-of-type(4)) { --x: 25; --y: 60; --alpha: 0.7; --tx: -0.4; --ty: -0.6; --delay: 0.4; --duration: 0.8; --size: 0.2;}
.particle:is(:nth-of-type(5)) { --x: 75; --y: 70; --alpha: 0.9; --tx: 0.6; --ty: -0.4; --delay: 0.5; --duration: 0.6; --size: 0.3;}
.particle:is(:nth-of-type(6)) { --x: 45; --y: 85; --alpha: 0.8; --tx: 0; --ty: 0.9; --delay: 0.6; --duration: 0.7; --size: 0.25;}
.particle:is(:nth-of-type(7)) { --x: 60; --y: 40; --alpha: 1; --tx: 0.3; --ty: -0.3; --delay: 0.7; --duration: 0.5; --size: 0.2;}
.particle:is(:nth-of-type(8)) { --x: 80; --y: 55; --alpha: 0.7; --tx: -0.2; --ty: 0.8; --delay: 0.8; --duration: 0.8; --size: 0.3;}

/* Add dark mode styles */
.dark .sparkle-button {
  --primary-saturation: 85%; /* Dark mode saturation */
  --primary-lightness-base: 65%; /* Dark mode base lightness */
  --primary-lightness-hover: 75%; /* Dark mode hover lightness */

  /* Adjust shadows for dark mode */
  box-shadow: 0 0 calc(var(--active) * 1.5em) calc(var(--active) * 0.5em) hsla(var(--primary-hue), var(--primary-saturation), var(--primary-lightness-hover), 0.4),
    0 0em 0 0 hsla(var(--primary-hue), var(--primary-saturation), calc((var(--active) * 10%) + 15%), 1) inset,
    0 -0.05em 0 0 hsla(var(--primary-hue), var(--primary-saturation), calc(var(--active) * 20% + 20%), 1) inset;
}

.dark .sparkle-button .sparkle path {
   color: hsl(var(--primary-foreground-hue), var(--primary-foreground-saturation), calc((var(--active, 0) * 30%) + var(--base, 70%))); /* Adjust sparkle color for dark mode */
}

.dark .sparkle-button .text {
   background: linear-gradient(90deg,
    hsl(var(--primary-foreground-hue), var(--primary-foreground-saturation), calc((var(--active) * 10%) + 85%)), /* Lighter end */
    hsl(var(--primary-foreground-hue), var(--primary-foreground-saturation), calc((var(--active) * 20%) + 75%)) /* Darker start */
  );
  -webkit-background-clip: text;
}

.dark .particle path {
  fill: hsl(var(--primary-foreground-hue), var(--primary-foreground-saturation), 85%); /* Lighter particles for dark mode */
}

/* Dark mode sparkle shine */
.dark .sparkle-button .spark:before {
   background: conic-gradient(
    from 0deg,
    transparent 0 340deg,
    hsl(var(--primary-foreground-hue), var(--primary-foreground-saturation), 90%) 360deg /* Lighter shine for dark mode */
  );
}
